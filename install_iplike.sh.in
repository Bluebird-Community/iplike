#!/bin/sh

do_error() {
	echo "Cannot install iplike: $@"
	exit 1
}

do_help() {
	cat <<END
usage: $0 [-h] [-d database] [-u pg_user] [-x pg_host] [-p pg_port] [-s sudo_user]

	-h   this help
	-d   the PostgreSQL database to insert the function into
	     (default: template1)
	-u   the PostgreSQL user to log in as
	     (default: postgres)
	-x   the PostgreSQL server name to connect to
	     (default: localhost)
	-p   the PostgreSQL server port to connect to
	     (default: 5432)
	-s   the user to sudo to before running psql
	     (default: postgres)

END

	exit 0
}

SUDO_USER="postgres"
PG_USER="postgres"
PG_HOST="localhost"
PG_PORT="5432"
PG_DATABASE="template1"

while getopts hu:p:x:s: ARG; do
	case "$ARG" in
		h) do_help ;;
		d) PG_DATABASE="$OPTARG" ;;
		u) PG_USER="$OPTARG" ;;
		x) PG_HOST="$OPTARG" ;;
		p) PG_PORT="$OPTARG" ;;
		s) SUDO_USER="$OPTARG" ;;
	esac
done

PSQL=`which psql`
if [ ! -r "@libdir@/iplike.la" ]; then
	do_error "unable to locate iplike.la"
fi

source "@libdir@/iplike.la"

if [ ! -f "$libdir/$dlname" ]; then
	do_error "$libdir/$dlname does not exist"
fi

if [ ! -x "$PSQL" ]; then
	do_error "unable to locate psql"
fi

PG_COMMAND="$PG_COMMAND psql"
[ -n "$SUDO_USER" ] && PG_COMMAND="sudo -u $SUDO_USER $PG_COMMAND"
[ -n "$PG_USER"   ] && PG_COMMAND="$PG_COMMAND -U $PG_USER"
[ -n "$PG_HOST"   ] && PG_COMMAND="$PG_COMMAND -h $PG_HOST"
[ -n "$PG_PORT"   ] && PG_COMMAND="$PG_COMMAND -p $PG_PORT"

exit 0
